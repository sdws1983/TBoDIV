t$construct <-as.character(t$列15_温室流水号PLTID)
t[t$列01_CodingID=="99999",]$construct <- "9999901001"
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
t$construct <- factor(t$construct)
t$time <- sapply(t[, 9], function(x) substr(x, 1, 4))
t <- t[,c(3,4,18,19,20,21)]
t <- t[t$construct!="15451083",]
t <- t[t$construct!="14061488",]
library("ggpubr")
focus_traits_list <- c("穗长","行粒数","苗势","粒宽度","粒厚度","穗行数","穗直径","穗宽","穗周长","穗位","百粒重","正常穗粒数",
"株高")#,"5穗粒重","病害区域比例","正常籽粒区域比例")
### IT
n = 1
for (focus_traits in focus_traits_list) {
t1 <- t[grep(focus_traits,t$traits),]
t1 <- t1[(t1$列03_试验=="IT"),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
print (cp)
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
p <- ggboxplot(t1[(t1$列03_试验=="IT"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(time), cols = vars(列04_地点), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0(gene, "_",focus_traits,".png"), width = 5000, height = 2500, res = 600)
print (p + stat_compare_means(label = "p.signif", method = "t.test", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,":",focus_traits)))
dev.off()
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
####
### IY
n = 1
for (focus_traits in focus_traits_list) {
ty <- t[(t$列03_试验=="IY"),]
t1 <- ty[grep(focus_traits,ty$traits),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
t1 <- t1[(t1$列04_地点!="包头")&(t1$列04_地点!="开封晚夏播")&(t1$列04_地点!="开封夏播")&(t1$列04_地点!="银川"),]
p <- ggboxplot(t1[(t1$列03_试验=="IY"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(列04_地点), cols = vars(time), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0("IY_", gene, "_",focus_traits,".png"), width = 8000, height = 4000, res = 600)
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
dev.off()
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
### combined
p <- ggboxplot(out[(out$列03_试验=="IY"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_wrap(vars(traits_combined), nrow = 3, scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
#png(paste0(gene, "_",focus_traits,".png"), width = 4000, height = 6000, res = 600)
print (p + stat_compare_means(label = "p.signif", method = "t.test", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": ",unique(t1$time),unique(t1$列04_地点))))
#dev.off()
library(showtext)
#font_add("myfont","C:/Windows/Fonts/simhei.ttf")
font_families()
showtext_auto()
library("ggplot2")
library(readr)
fl <- c("CAUB0045","CAUB0347","CAUB0601","CAUB1250","CAUC0418","CAUC0432","CAUC1157","CAUC1374","CAUD0014","CAUB0764")
gene = fl[9]#"Zm00001eb042650"
#fielddata <- read_csv("work/DH-sites/phenotype/CAUE0397田测数据.csv")# "Zm00001eb356090"
#fielddata <- read_csv("work/DH-sites/phenotype/fielddata for Zm00001eb042650.csv")
fielddata <- read_csv(paste0("work/DH-sites/phenotype/", gene, ".csv")) #"Zm00001eb063350"
library(tidyr)# 使用的gather & spread
library(reshape2) # 使用的函数 melt & dcast
gd1_long<-gather(fielddata,traits,value,18:ncol(fielddata))
#gd1_long<-gather(fielddata_for_Zm00001eb063350,traits,value,18:75)
gd1_long$value <- as.numeric(gd1_long$value)
t <- gd1_long[!is.na(gd1_long$value),]
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
colnames(t) <- gsub("[:]", "_", colnames(t))
t$traits <- gsub("[:]", "_", t$traits)
traits <- unique(t$traits)
#t1 <- t[t$traits=="性状:苗势",]
#t1 <- t1[t1$`列04:地点`=="公主岭",]
t$construct <-as.character(t$列15_温室流水号PLTID)
t[t$列01_CodingID=="99999",]$construct <- "9999901001"
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
t$construct <- factor(t$construct)
t$time <- sapply(t[, 9], function(x) substr(x, 1, 4))
t <- t[,c(3,4,18,19,20,21)]
t <- t[t$construct!="15451083",]
t <- t[t$construct!="14061488",]
library("ggpubr")
focus_traits_list <- c("穗长","行粒数","苗势","粒宽度","粒厚度","穗行数","穗直径","穗宽","穗周长","穗位","百粒重","正常穗粒数",
"株高")#,"5穗粒重","病害区域比例","正常籽粒区域比例")
### IT
n = 1
for (focus_traits in focus_traits_list) {
t1 <- t[grep(focus_traits,t$traits),]
t1 <- t1[(t1$列03_试验=="IT"),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
print (cp)
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
p <- ggboxplot(t1[(t1$列03_试验=="IT"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(time), cols = vars(列04_地点), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0(gene, "_",focus_traits,".png"), width = 5000, height = 2500, res = 600)
print (p + stat_compare_means(label = "p.signif", method = "t.test", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,":",focus_traits)))
dev.off()
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
####
### IY
n = 1
for (focus_traits in focus_traits_list) {
ty <- t[(t$列03_试验=="IY"),]
t1 <- ty[grep(focus_traits,ty$traits),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
t1 <- t1[(t1$列04_地点!="包头")&(t1$列04_地点!="开封晚夏播")&(t1$列04_地点!="开封夏播")&(t1$列04_地点!="银川"),]
p <- ggboxplot(t1[(t1$列03_试验=="IY"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(列04_地点), cols = vars(time), scales = "free_y") + coord_flip()
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0("IY_", gene, "_",focus_traits,".png"), width = 8000, height = 4000, res = 600)
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
dev.off()
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
library(showtext)
#font_add("myfont","C:/Windows/Fonts/simhei.ttf")
font_families()
showtext_auto()
library("ggplot2")
library(readr)
fl <- c("CAUB0045","CAUB0347","CAUB0601","CAUB1250","CAUC0418","CAUC0432","CAUC1157","CAUC1374","CAUD0014","CAUB0764")
gene = fl[9]#"Zm00001eb042650"
#fielddata <- read_csv("work/DH-sites/phenotype/CAUE0397田测数据.csv")# "Zm00001eb356090"
#fielddata <- read_csv("work/DH-sites/phenotype/fielddata for Zm00001eb042650.csv")
fielddata <- read_csv(paste0("work/DH-sites/phenotype/", gene, ".csv")) #"Zm00001eb063350"
library(tidyr)# 使用的gather & spread
library(reshape2) # 使用的函数 melt & dcast
gd1_long<-gather(fielddata,traits,value,18:ncol(fielddata))
#gd1_long<-gather(fielddata_for_Zm00001eb063350,traits,value,18:75)
gd1_long$value <- as.numeric(gd1_long$value)
t <- gd1_long[!is.na(gd1_long$value),]
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
colnames(t) <- gsub("[:]", "_", colnames(t))
t$traits <- gsub("[:]", "_", t$traits)
traits <- unique(t$traits)
#t1 <- t[t$traits=="性状:苗势",]
#t1 <- t1[t1$`列04:地点`=="公主岭",]
t$construct <-as.character(t$列15_温室流水号PLTID)
t[t$列01_CodingID=="99999",]$construct <- "9999901001"
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
t$construct <- factor(t$construct)
t$time <- sapply(t[, 9], function(x) substr(x, 1, 4))
t <- t[,c(3,4,18,19,20,21)]
t <- t[t$construct!="15451083",]
t <- t[t$construct!="14061488",]
library("ggpubr")
focus_traits_list <- c("穗长","行粒数","苗势","粒宽度","粒厚度","穗行数","穗直径","穗宽","穗周长","穗位","百粒重","正常穗粒数",
"株高")#,"5穗粒重","病害区域比例","正常籽粒区域比例")
### IT
n = 1
for (focus_traits in focus_traits_list) {
t1 <- t[grep(focus_traits,t$traits),]
t1 <- t1[(t1$列03_试验=="IT"),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
print (cp)
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
p <- ggboxplot(t1[(t1$列03_试验=="IT"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(time), cols = vars(列04_地点), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0(gene, "_",focus_traits,".png"), width = 5000, height = 2500, res = 600)
print (p + stat_compare_means(label = "p.signif", method = "t.test", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,":",focus_traits)))
dev.off()
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
####
### IY
n = 1
for (focus_traits in focus_traits_list) {
ty <- t[(t$列03_试验=="IY"),]
t1 <- ty[grep(focus_traits,ty$traits),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
t1 <- t1[(t1$列04_地点!="包头")&(t1$列04_地点!="开封晚夏播")&(t1$列04_地点!="开封夏播")&(t1$列04_地点!="银川"),]
p <- ggboxplot(t1[(t1$列03_试验=="IY"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(time), cols = vars(列04_地点), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0("IY_", gene, "_",focus_traits,".png"), width = 8000, height = 4000, res = 600)
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
dev.off()
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
library(showtext)
#font_add("myfont","C:/Windows/Fonts/simhei.ttf")
font_families()
showtext_auto()
library("ggplot2")
library(readr)
fl <- c("CAUB0045","CAUB0347","CAUB0601","CAUB1250","CAUC0418","CAUC0432","CAUC1157","CAUC1374","CAUD0014","CAUB0764")
gene = fl[9]#"Zm00001eb042650"
#fielddata <- read_csv("work/DH-sites/phenotype/CAUE0397田测数据.csv")# "Zm00001eb356090"
#fielddata <- read_csv("work/DH-sites/phenotype/fielddata for Zm00001eb042650.csv")
fielddata <- read_csv(paste0("work/DH-sites/phenotype/", gene, ".csv")) #"Zm00001eb063350"
library(tidyr)# 使用的gather & spread
library(reshape2) # 使用的函数 melt & dcast
gd1_long<-gather(fielddata,traits,value,18:ncol(fielddata))
#gd1_long<-gather(fielddata_for_Zm00001eb063350,traits,value,18:75)
gd1_long$value <- as.numeric(gd1_long$value)
t <- gd1_long[!is.na(gd1_long$value),]
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
colnames(t) <- gsub("[:]", "_", colnames(t))
t$traits <- gsub("[:]", "_", t$traits)
traits <- unique(t$traits)
#t1 <- t[t$traits=="性状:苗势",]
#t1 <- t1[t1$`列04:地点`=="公主岭",]
t$construct <-as.character(t$列15_温室流水号PLTID)
t[t$列01_CodingID=="99999",]$construct <- "9999901001"
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
t$construct <- factor(t$construct)
t$time <- sapply(t[, 9], function(x) substr(x, 1, 4))
t <- t[,c(3,4,18,19,20,21)]
t <- t[t$construct!="15451083",]
t <- t[t$construct!="14061488",]
library("ggpubr")
focus_traits_list <- c("穗长","行粒数","苗势","粒宽度","粒厚度","穗行数","穗直径","穗宽","穗周长","穗位","百粒重","正常穗粒数",
"株高")#,"5穗粒重","病害区域比例","正常籽粒区域比例")
### IT
n = 1
for (focus_traits in focus_traits_list) {
t1 <- t[grep(focus_traits,t$traits),]
t1 <- t1[(t1$列03_试验=="IT"),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
print (cp)
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
p <- ggboxplot(t1[(t1$列03_试验=="IT"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(time), cols = vars(列04_地点), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0(gene, "_",focus_traits,".png"), width = 5000, height = 2500, res = 600)
print (p + stat_compare_means(label = "p.signif", method = "t.test", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,":",focus_traits)))
dev.off()
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
####
### IY
n = 1
for (focus_traits in focus_traits_list) {
ty <- t[(t$列03_试验=="IY"),]
t1 <- ty[grep(focus_traits,ty$traits),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
t1 <- t1[(t1$列04_地点!="包头")&(t1$列04_地点!="开封晚夏播")&(t1$列04_地点!="开封夏播")&(t1$列04_地点!="银川"),]
p <- ggboxplot(t1[(t1$列03_试验=="IY"),], x = "construct", y = "value",
color = "construct", palette = "jco", add.params = list(size=.1), #add = "jitter",
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(time), cols = vars(列04_地点), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0("IY_", gene, "_",focus_traits,".png"), width = 8000, height = 4000, res = 600)
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
dev.off()
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
library(showtext)
#font_add("myfont","C:/Windows/Fonts/simhei.ttf")
font_families()
showtext_auto()
library("ggplot2")
library(readr)
fl <- c("CAUB0045","CAUB0347","CAUB0601","CAUB1250","CAUC0418","CAUC0432","CAUC1157","CAUC1374","CAUD0014","CAUB0764")
gene = fl[9]#"Zm00001eb042650"
#fielddata <- read_csv("work/DH-sites/phenotype/CAUE0397田测数据.csv")# "Zm00001eb356090"
#fielddata <- read_csv("work/DH-sites/phenotype/fielddata for Zm00001eb042650.csv")
fielddata <- read_csv(paste0("work/DH-sites/phenotype/", gene, ".csv")) #"Zm00001eb063350"
library(tidyr)# 使用的gather & spread
library(reshape2) # 使用的函数 melt & dcast
gd1_long<-gather(fielddata,traits,value,18:ncol(fielddata))
#gd1_long<-gather(fielddata_for_Zm00001eb063350,traits,value,18:75)
gd1_long$value <- as.numeric(gd1_long$value)
t <- gd1_long[!is.na(gd1_long$value),]
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
colnames(t) <- gsub("[:]", "_", colnames(t))
t$traits <- gsub("[:]", "_", t$traits)
traits <- unique(t$traits)
#t1 <- t[t$traits=="性状:苗势",]
#t1 <- t1[t1$`列04:地点`=="公主岭",]
t$construct <-as.character(t$列15_温室流水号PLTID)
t[t$列01_CodingID=="99999",]$construct <- "9999901001"
#t$construct <- sapply(t[, 2], function(x) substr(x, 1, 10))
t$construct <- factor(t$construct)
t$time <- sapply(t[, 9], function(x) substr(x, 1, 4))
t <- t[,c(3,4,18,19,20,21)]
t <- t[t$construct!="15451083",]
t <- t[t$construct!="14061488",]
library("ggpubr")
focus_traits_list <- c("穗长","行粒数","苗势","粒宽度","粒厚度","穗行数","穗直径","穗宽","穗周长","穗位","百粒重","正常穗粒数",
"株高")#,"5穗粒重","病害区域比例","正常籽粒区域比例")
### IT
n = 1
for (focus_traits in focus_traits_list) {
t1 <- t[grep(focus_traits,t$traits),]
t1 <- t1[(t1$列03_试验=="IT"),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
print (cp)
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
p <- ggboxplot(t1[(t1$列03_试验=="IT"),], x = "construct", y = "value",
color = "construct", palette = "jco", add = "jitter", add.params = list(size=.1),
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(time), cols = vars(列04_地点), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0(gene, "_",focus_traits,".png"), width = 5000, height = 2500, res = 600)
print (p + stat_compare_means(label = "p.signif", method = "t.test", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,":",focus_traits)))
dev.off()
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
####
### IY
n = 1
for (focus_traits in focus_traits_list) {
ty <- t[(t$列03_试验=="IY"),]
t1 <- ty[grep(focus_traits,ty$traits),]
cp <- list()
for (e in sort(unique(t1$construct))) {
if (e != "9999901001"){
cp <- c(cp, list(c(e,"9999901001")))
}
}
if (nrow(t1) != 0){
t1$value <- as.numeric(t1$value)
t1$time <- factor(t1$time)
t1$traits_combined <- focus_traits
### cross locations
t1 <- t1[(t1$列04_地点!="包头")&(t1$列04_地点!="开封晚夏播")&(t1$列04_地点!="开封夏播")&(t1$列04_地点!="银川")&(t1$列04_地点!="安阳春播"),]
p <- ggboxplot(t1[(t1$列03_试验=="IY"),], x = "construct", y = "value",
color = "construct", palette = "jco", add.params = list(size=.1), #add = "jitter",
x.text.angle = 90 , ggtheme = theme_bw(),# varwidth = T,
short.panel.labs = FALSE) +
facet_grid(rows = vars(time), cols = vars(列04_地点), scales = "free_y")
#pdf(paste0("Zm00001eb063350_",focus_traits,".pdf"), width = 10, height = 8)
png(paste0("IY_", gene, "_",focus_traits,".png"), width = 8000, height = 4000, res = 600)
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
dev.off()
print (p + stat_compare_means(label = "p.signif", vjust = .8,
comparisons = cp) + ggtitle(paste0(gene,": IY :",focus_traits)))
if (n == 1){out <- t1}else{out <- rbind(out, t1)}
n = 0
}
}
data(iris)
aov1 <- aov(Sepal.Length~Species, iris)
aov1
View(iris)
lm(Sepal.Length~Species, iris)
lm(Sepal.Length~Speal.Width, iris)
lm(Sepal.Length~Sepal.Width, iris)
a <- lm(Sepal.Length~Sepal.Width, iris)
summary(a)
a <- lm(Sepal.Length~Sepal.Width, iris)
summary(a)
library("ggtree")
library("ggtree")
setwd("~/Documents/GitHub/lessons/public/lesson5")
library(here)
here::dr_here()
d <- read_excel("olymics.xlsx")
library(readxl)
d <- read_excel("olymics.xlsx")
d <- read_excel("olympics.xlsx")
d
d <- read.table(file= "text.txt", header = TRUE)
d <- read_excel("olympics.xlsx")
d <- read.table(file= "text.txt", header = TRUE)
d <- read.table("text.txt", header = TRUE)
d <- read.table("score.csv", header = TRUE)
d
d <- read.table("test.txt", header = TRUE)
d
